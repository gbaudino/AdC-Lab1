// regfile 32 registros de 64 bits

module regfile #(parameter N=64)
					(input logic clk, we3,
					 input logic [4:0] ra1, ra2, wa3,
					 input logic [63:0] wd3,
					 output logic [63:0] rd1, rd2);
					 
		logic [N-1:0] registers [31:0];

		initial
		begin
			registers = '{default:'0}
			for (
		
		always_ff @(posedge clk)
			begin
				if(we3)
					registers[wa3] <= wd3;
			end

		always_comb
			begin
				rd1 <= (ra1 != 5'b11111) ? registers[ra1] : 64'b0;
				rd2 <= (ra2 != 5'b11111) ? registers[ra2] : 64'b0;
			end
			
endmodule
		